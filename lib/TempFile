
class MyUserProfile extends StatefulWidget {
  MyUserProfile({Key? key}) : super(key: key);
  final UserData _userD = UserData.empty();

  @override
  State<MyUserProfile> createState() => _MyUserProfileState();
}

class _MyUserProfileState extends State<MyUserProfile> {
  late UserData _userData;

  final _formKey = GlobalKey<FormState>();

  String _phoneno ="";
  String _countryCode = "";
  String _userName = "";
  String _userEmail = "";
  int? _userAge;
  String _userGender = "";
  String _userCountry ="";

  void _trySubmitForm() {
    final bool? isValid = _formKey.currentState?.validate();
    if (isValid == true) {
      debugPrint('Everything looks good!');
      debugPrint(_userEmail);
      debugPrint(_userName);


      /*
      Continue processing the provided information with your own logic
      such us sending HTTP requests, saving to SQLite database, etc.
      */
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        color: Colors.deepOrange,
        alignment: Alignment.center,
        child: Center(
          //margin: const EdgeInsets.symmetric(horizontal: 35),
          child: Padding(
            padding: const EdgeInsets.all(20),
            child: Form(
                key: _formKey,
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    /// Phone Number
                    TextFormField(
                      decoration: const InputDecoration(labelText: 'Phone No'),
                      initialValue: "$_countryCode $_phoneno",
                    ),
                    /// Email
                    TextFormField(
                      decoration: const InputDecoration(labelText: 'Email'),
                      validator: (value) {
                        if (value == null || value.trim().isEmpty) {
                          return 'Please enter your email address';
                        }
                        // Check if the entered email has the right format
                        if (!RegExp(r'\S+@\S+\.\S+').hasMatch(value)) {
                          return 'Please enter a valid email address';
                        }
                        // Return null if the entered email is valid
                        return null;
                      },
                      onChanged: (value) => _userEmail = value,
                    ),

                    /// username
                    TextFormField(
                      decoration:
                      const InputDecoration(labelText: 'Username'),
                      validator: (value) {
                        if (value == null || value.trim().isEmpty) {
                          return 'This field is required';
                        }
                        if (value.trim().length < 4) {
                          return 'Username must be at least 4 characters in length';
                        }
                        // Return null if the entered username is valid
                        return null;
                      },
                      onChanged: (value) => _userName = value,
                    ),
                    /// user age
                    TextFormField(
                      decoration:
                      const InputDecoration(labelText: 'Age'),
                      keyboardType: TextInputType.number,
                      inputFormatters: <TextInputFormatter>[FilteringTextInputFormatter.digitsOnly],
                      validator: (value) {
                        if (value == null || value.trim().isEmpty) {
                          return 'User age is required';
                        }
                        // Return null if the entered username is valid
                        return null;
                      },
                      onChanged: (value) => _userName = value,
                    ),

                    const SizedBox(height: 20),
                    Container(
                        alignment: Alignment.centerRight,
                        child: OutlinedButton(
                            onPressed: _trySubmitForm,
                            child: const Text('Sign Up')))
                  ],
                )),
          ),
        ),
      ),
    );
  }

}
